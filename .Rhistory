geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
piaac <- read.csc("piaac2-1.csv", fileEncoding="utf-8")
piaac <- read.csv("piaac2-1.csv", fileEncoding="utf-8")
View(piaac)
View(piaac)
piaac3 <- read.csv("piaac2-1.csv", fileEncoding="utf-8")
View(piaac3)
View(piaac3)
View(piaac2)
View(piaac2)
piaac <- read.csv("piaac2-1.csv", fileEncoding="utf-8")
View(piaac)
piaac <- read.csv("piaac2-1.csv", fileEncoding="utf-8", strip.white = TRUE)
piaac <- read.csv("piaac2-1.csv", fileEncoding="utf-8", strip.white = TRUE)
head(piaac)
tail(piaac)
summary(piaac)
str(piaac)
names(piaac)
mean(piaac$vanus)
mean(piaac$sissetulek)
mean(piaac$sissetulek, na.rm = TRUE)
piaac[c(2,3) c(3:5)]
piaac[c(2,3), c(3:5)]
piaac[piaac$vanus>50,]
piaac[piaac$vanus>50,piaac$sissetulek>1000]
piaac[piaac$vanus>50 & piaac$sissetulek>1000]
piaac[piaac$vanus>50 & piaac$sissetulek>1000, c("vanus", "sissetulek")]
piaac[piaac$vanus>50 & piaac$sissetulek>1000, c("vanus", "sissetulek"), na.rm = T]
piaac[piaac$vanus>50 & piaac$sugu=="Mees", c("vanus", "sissetulek")]
suurpalk <- piaac[piaac$sissetulek>500, ]
View(suurpalk)
uusandmestik <- subset(suurpalk, !is.na = ("Sugu"))
uusandmestik <- subset(suurpalk, !is.na = (Sugu))
uusandmestik <- subset(suurpalk, !is.na(Sugu))
uusandmestik <- subset(suurpalk, !is.na(sugu))
View(uusandmestik)
mean(uusandmestik)
mean(uusandmestik, na.rm = TRUE)
mean(uusandmestik$sissetulek, na.rm = TRUE)
uusandmestik <- subset(suurpalk, !is.na(suurpalk$sugu))
mean(uusandmestik$sissetulek)
nimi <- "Kati"
perenimi <- "Karu"
pikkus <-"1.65"
andmed <- data.frame(sõrmedearv = C(5,5), varvastearv = c(5,5))
karukati <- list(eesnimi=nimi, perenimi=perenimi, pikkus=pikkus, andmed=andmed)
nimi <- "Kati"
perenimi <- "Karu"
pikkus <-"1.65"
andmed <- data.frame(sõrmedearv = C(5,5), varvastearv = c(5,5))
andmed <- data.frame(sõrmedearv = c(5,5), varvastearv = c(5,5))
karukati <- list(eesnimi=nimi, perenimi=perenimi, pikkus=pikkus, andmed=andmed)
t.test(piaac$literacy)
tulemus <- t.test(piaac$literacy)
str(tulemus)
tulemus[["estimate"]]
tulemus[["conf.int"]]
tulemus[["conf.int"]][1]
alumine <- tulemus[["conf.int"]][1]
ülemine <- tulemus[["conf.int"]][2]
korrutakolmega <- function (x) {
vastus <- x*3
return(vastus)
}
vektor <- c(1,2, 3.4)
korrutakolmega(vektor)
for(i in c("Mees", "Naine")) {
vahetulemus <- subset(piaac, sugu==i)
n <- length(vahetulemus$sugu)
cat(paste(i, "n on", n, "\n"))
}
leiaalumine <- function (kumbpiir) {
tulemus <- t.test(piaac$literacy)
if (kumbpiir == 2) {
vastus <- tulemus[["conf.int"]][2]
} else {
vastus <- tulemus[["conf.int"]][1]
}
return(vastus)
}
leiapiir <- function (kumbpiir) {
tulemus <- t.test(piaac$literacy)
if (kumbpiir == 2) {
vastus <- tulemus[["conf.int"]][2]
} else {
vastus <- tulemus[["conf.int"]][1]
}
return(vastus)
}
leiapiir(2)
leiapiir <- function (kumbpiir) {
tulemus <- t.test(piaac$literacy)
if (kumbpiir == "ülemine") {
vastus <- tulemus[["conf.int"]][2]
} else {
vastus <- tulemus[["conf.int"]][1]
}
return(vastus)
}
leiapiir("ülemine")
leiapiir <- function (kumbpiir) {
tulemus <- t.test(piaac$literacy)
if (kumbpiir == "ülemine") {
vastus <- tulemus[["conf.int"]][2]
} else if {
vastus <- tulemus[["conf.int"]][1]
} else {
vastus("sisesta Ülemine või Alumine")
}
return(vastus)
}
leiapiir <- function (kumbpiir) {
tulemus <- t.test(piaac$literacy)
if (kumbpiir == "ülemine") {
vastus <- tulemus[["conf.int"]][2]
} elseif {
vastus <- tulemus[["conf.int"]][1]
} else {
vastus("sisesta Ülemine või Alumine")
}
return(vastus)
}
?else
leiapiir <- function (kumbpiir) {
tulemus <- t.test(piaac$literacy)
if (kumbpiir == "Ülemine") {
vastus <- tulemus[["conf.int"]][2]
} else if (kumbpiir == "Alumine") {
vastus <- tulemus[["conf.int"]][1]
} else {
vastus("sisesta Ülemine või Alumine")
}
return(vastus)
}
leiapiir("ülemine")
leiapiir <- function (kumbpiir) {
tulemus <- t.test(piaac$literacy)
if (kumbpiir == "Ülemine") {
vastus <- tulemus[["conf.int"]][2]
} else if (kumbpiir == "Alumine") {
vastus <- tulemus[["conf.int"]][1]
} else {
vastus <- cat("sisesta Ülemine või Alumine")
}
return(vastus)
}
leiapiir("ülemine")
leiapiir("Ülemine")
leiapiir("Alemine")
leiapiir("Alumine")
leiapiir <- function (andmed,kumbpiir) {
tulemus <- t.test(andmed)
if (kumbpiir == "Ülemine") {
vastus <- tulemus[["conf.int"]][2]
} else if (kumbpiir == "Alumine") {
vastus <- tulemus[["conf.int"]][1]
} else {
vastus <- cat("sisesta Ülemine või Alumine")
}
return(vastus)
}
leiapiir(piaac$literacy, "Alumine")
leiapiir <- function (andmed,kumbpiir) {
tulemus <- t.test(andmed)
if (kumbpiir == "Ülemine") {
vastus <- tulemus[["conf.int"]][2]
} else if (kumbpiir == "Alumine") {
vastus <- tulemus[["conf.int"]][1]
} else {
vastus <- print("sisesta Ülemine või Alumine")
}
return(vastus)
}
leiapiir(piaac$literacy, "alumine")
leiapiir <- function (andmed,kumbpiir) {
tulemus <- t.test(andmed)
if (kumbpiir == "Ülemine") {
vastus <- tulemus[["conf.int"]][2]
} else if (kumbpiir == "Alumine") {
vastus <- tulemus[["conf.int"]][1]
} else {
vastus <- print("sisesta Ülemine või Alumine")
}
}
leiapiir(piaac$literacy, "alumine")
leiapiir(piaac$literacy, "Alumine")
leiapiir(piaac$literacy, "Alumine")
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(tidyverse)
library(stringr)
palgad <- read.csv("palgad.csv", fileEncoding = "utf-8")
View(palgad)
head(palgad)
top_n(palgad, 5, põhipalk.2015)
top_n(5, põpõhipalk.2015)
palgad %>%
top_n(5, põpõhipalk.2015)
palgad %>%
top_n(5, põhipalk.2015)
top_n(5, wt=põhipalk.2015)
palgad %>%
top_n(5, wt=põhipalk.2015)
uustabel <- palgad %>%
select(asutus.2014, ametikoht.2014, põpõhipalk.2014)
uustabel <- palgad %>%
select(asutus.2014, ametikoht.2014, põhipalk.2014)
head(uustabel)
select(asutus.2014:ametikoht.2014)
uustabel <- palgad %>%
select(asutus.2014:ametikoht.2014)
head(uustabel)
uustabel2 <- palgad %>%
select (ends_with(2015))
uustabel2 <- palgad %>%
select (ends_with("2015"))
head(uustabel2)
filer (sissetulek > 5000)
uustabel2 <- palgad %>%
filer (sissetulek > 5000)
uustabel2 <- palgad %>%
filter(sissetulek > 5000)
names(palgad)
uustabel2 <- palgad %>%
filter(põpõhipalk.2015> 5000)
uustabel2 <- palgad %>%
filter(põhipalk.2015> 5000)
head(uustabel2)
uustabel2 <- palgad %>%
filter(põhipalk.2015> 5000) %>%
select(asutus.2015, ametikoht.2015, põhipalk.2015)
names(palgad)
head(uustabel2)
install.packages("mongolite")
library(mongolite)
m <- mongo(collection = "users")
m <- mongo(collection = "users")
m <- mongo(collection = "users")
View(m)
palgad %>%
filter(ametikoht.2015=="valvur") %>%
mean(põhipalk.2015, na.rm = TRUE)
palgad %>%
filter(ametikoht.2015=="valvur") %>%
summarize(keskminesissetulek = mean(põhipalk.2015, na.rm = TRUE))
palgad %>%
filter(koormus.2014 < 1) %>%
summarize(keskminesissetulek = mean(põhipalk.2014, na.rm = TRUE), mediaan = median(põpõhipalk.2014, na.rm = TRUE))
palgad %>%
filter(koormus.2014 < 1) %>%
summarize(keskminesissetulek = mean(põhipalk.2014, na.rm = TRUE), mediaan = median(põhipalk.2014, na.rm = TRUE))
names(andmed)
names(palgad)
palgad %>%
filter(asutus.2014=NULL)
palgad %>%
filter(asutus.2014==NULL)
palgad %>%
filter(is.na(asutus.2014))%>%
summarize(maksimaalne = max(põhipalk.2015, na.rm = TRUE), keskminesissetulek = mean(põhipalk.2015, na.rm = TRUE))
palgad %>%
filter(is.na(asutus.2014))%>%
summarize(maksimaalne = max(põhipalk.2015, na.rm = TRUE),
keskminesissetulek = mean(põhipalk.2015, na.rm = TRUE)
)
uustabel <- palgad %>%
group_by(asutus.2015)%>%
summarize(keskminesissetulek = mean(põhipalk.2015, na.rm = TRUE), kogupalk = sum(põhipalk.2015, na.rm = TRUE))
uustabel
#
uustabel <- palgad %>%
group_by(asutus.2015)%>%
summarize(keskminesissetulek = mean(põhipalk.2015, na.rm = TRUE), kogupalk = sum(põhipalk.2015, na.rm = TRUE))%>%
sort_by(kogupalk)
sort_by(uustabel$kogupalk)
?sort_by
uustabel
library(mongolite)
m <- mongo(collection = "users")
m$count()
m <- mongo(collection = "posts")
m$count()
out <- m$find('{"body" : "post"}')
out
uustabel <- palgad %>%
arrange(põhipalk.2015)%>%
select(põhipalk.2015, asutus.2015, koormus.2015)
head(uustabel)
out
out <- m$find
out
palgad %>%
group_by(ametikoht.2015)%>%
summarize(keskminepalk = mean(põpõhipalk.2015, na.rm = TRUE))%>%
filter(top_n(keskminepalk))%>%
arrange(keskminepalk)
palgad %>%
group_by(ametikoht.2015)%>%
summarize(keskminepalk = mean(põhipalk.2015, na.rm = TRUE))%>%
filter(top_n(keskminepalk))%>%
arrange(keskminepalk)
palgad %>%
group_by(ametikoht.2015)%>%
summarize(keskminepalk = mean(põhipalk.2015, na.rm = TRUE))%>%
filter(top_n(keskminepalk))%>%
arrange("keskminepalk")
palgad %>%
group_by(ametikoht.2015)%>%
summarize(keskminepalk = mean(põhipalk.2015, na.rm = TRUE))%>%
filter(top_n(keskminepalk))%>%
arrange(keskminepalk)
uustabel <- palgad %>%
group_by(ametikoht.2015)%>%
summarize(keskminepalk = mean(põhipalk.2015, na.rm = TRUE))%>%
filter(top_n(keskminepalk))%>%
arrange(keskminepalk)
uustabel <- palgad %>%
group_by(ametikoht.2015) %>%
summarize(keskminepalk = mean(põhipalk.2015)) %>%
filter(top_n(keskminepalk)) %>%
arrange(keskminepalk)
uustabel <- palgad %>%
group_by(ametikoht.2015) %>%
summarize(keskminepalk = mean(põhipalk.2015)) %>%
top_n(10,keskminepalk) %>%
arrange(keskminepalk)
palgad %>%
group_by(ametikoht.2015) %>%
summarize(keskminepalk = mean(põhipalk.2015)) %>%
top_n(10,keskminepalk) %>%
arrange(keskminepalk)
out <- m$find('{"body" : ""}')
out <- m$find('{"body" : "post"}')
m$import(file(dump), bson = TRUE)
m$import(file(posts), bson = TRUE)
m$import(file(post), bson = TRUE)
uustabel <- piaac %>%
group_by(sugu, vanus3)%>%
summarise(kesmine = mean(numeracy, na.rm = TRUE),
alumine = leiaalumine(numeracy))
install.packages("mongolite")
install.packages("mongolite")
install.packages("mongolite")
install.packages("mongolite")
m$drop
install.packages("mongolite")
install.packages("mongolite")
piaac %>%
summarize (keskminepalk = mean (isaharidus, sugu, na.rm = TRUE))%>%
arrange(keskminepalk)
View(piaac)
piaac %>%
group_by(isaharidus, sugu)%>%
summarize (keskminepalk = mean (sissetulek, sugu, na.rm = TRUE)) %>%
arrange(keskminepalk)
library(tidyverse)
library(stringr)
piaac %>%
group_by(isaharidus, sugu) %>%
summarize (keskminepalk = mean (sissetulek, sugu, na.rm = TRUE)) %>%
arrange(keskminepalk)
piaac %>%
group_by(isaharidus, sugu) %>%
summarize (keskminepalk = mean (sissetulek, na.rm = TRUE)) %>%
arrange(keskminepalk)
muutused <- palgad %>%
mutate(palgamuutus = põhipalk.2015/põhipalk.2014)%>%
group_by(asutus.2014)%>%
summarize (keskminepalk = mean (palgamuutus, na.rm = TRUE)) %>%
arrange(palgamuutus)
muutused <- palgad %>%
mutate(palgamuutus = põhipalk.2015/põhipalk.2014)%>%
group_by(asutus.2014)%>%
summarize (keskmine = mean (palgamuutus, na.rm = TRUE)) %>%
arrange(keskmine)
palgad %>%
mutate(palgamuutus = põhipalk.2015/põhipalk.2014)%>%
group_by(asutus.2014)%>%
summarize (keskmine = mean (palgamuutus, na.rm = TRUE)) %>%
arrange(keskmine)
palgad %>%
mutate(palgamuutus = põhipalk.2015/põhipalk.2014)%>%
group_by(asutus.2014)%>%
summarize (keskmine = mean (palgamuutus, na.rm = TRUE)) %>%
arrange(desc(keskmine))
vignette("databases")
loomadepikkus <- data.frame(loom= c("kass", "koer", "elevant"), pikkus = c (10, 20, 50))
loomadelaius <- data.frame(loom = c("kass", "koer", "karu"), laius = c(5, 15, 10))
left_join(loomadepikkus, loomadelaius, by = loom)
left_join(loomadepikkus, loomadelaius, by = "loom")
right_join(loomadepikkus, loomadelaius, by = "loom")
full_join(loomadepikkus, loomadelaius, by = "loom")
inner_join(loomadepikkus, loomadelaius, by = "loom")
anti_join(loomadepikkus, loomadelaius, by = "loom")
install.packages("pxR")
library(pxR)
rahvastik <- as.data.frame(read.px("RV022.px"))
firmad <- as.data.frame(read.px("ER027.px"))
View(firmad)
View(rahvastik)
View(rahvastik)
View(rahvastik)
str(rahvastik)
str(rahvastik, firmad)
str(rahvastik)
str(firmad)
levels(rahvastik$Maakond)
levels(firmad$Maakond)
anti_join(rahvastik, firmad, by = c("Maakond", "Aasta"))
levels(rahvastik$Maakond)[7]
levels(rahvastik$Maakond)[7] <- "Järva maakond"
anti_join(rahvastik, firmad, by = c("Maakond", "Aasta"))
levels(rahvastik$Maakond)[9]
levels(rahvastik$Maakond)[9] <- "Lääne-Viru maakond"
anti_join(rahvastik, firmad, by = c("Maakond", "Aasta"))
andmestik <- right_join(rahvastik, firmad, by = c("Maakond", "Aasta"))
andmestik
View(andmestik)
head(andmestik)
names(andmestik)[5] <- "Rahvastik"
names(andmestik)[7] <- "Elanikke"
names(andmestik)[7] <- "Firmasid"
names(andmestik)[5] <- "Elanikke"
andmestik %>%
filter(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
print(top_n(1, ev_suhtarv))
andmestik %>%
group_by(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
print(top_n(1, ev_suhtarv))
andmestik %>%
filter(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
print(top_n(1, ev_suhtarv))
andmestik %>%
filter(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
print(top_n(1))
andmestik %>%
filter(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
print(ev_suhtarv)
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
andmestik %>%
filter(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
print(ev_suhtarv)
andmestik %>%
filter(Maakond, Aasta, Elanikke, Firmasid)%>%
summarize(ev_suhtarv = Firmasid / 1000)%>%
print(ev_suhtarv)
andmestik %>%
filter(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
top_n(1, ev_suhtarv)
andmestik %>%
filter(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
top_n(10, ev_suhtarv)
andmestik %>%
Select(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
top_n(10, ev_suhtarv)
andmestik %>%
select(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
top_n(1, ev_suhtarv)
andmestik %>%
select(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
top_n(10, ev_suhtarv)
qplot(x = "Maakond", y="ev_suhtarv")
qplot(data=andmestik; x = "Maakond", y="ev_suhtarv")
?qplot
andmestik %>%
select(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
qplot(aes(x = "Maakond", y="ev_suhtarv")) + geom_point( + facet_wrap(~Maakond))
andmestik %>%
select(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
qplot(aes(x = "Maakond", y="ev_suhtarv")) + geom_point( + facet_wrap(~Maakond, nrow = 6))
andmestik %>%
select(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
qplot(aes(x = "Maakond", y="ev_suhtarv")) + geom_point() + facet_wrap(~Maakond, nrow = 6))
andmestik %>%
select(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
qplot(aes(x = "Maakond", y="ev_suhtarv") + geom_point() + facet_wrap(~Maakond, nrow = 6))
andmestik %>%
select(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
qplot(aes(x = "Aasta", y="ev_suhtarv") + geom_point() + facet_wrap(~Maakond, nrow = 6))
qplot(aes(x = "Aasta", y="ev_suhtarv")) + geom_point() + facet_wrap(~Maakond, nrow = 6)))
qplot(aes((x = "Aasta", y="ev_suhtarv") + geom_point() + facet_wrap(~Maakond, nrow = 6)))
andmestik %>%
select(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
qplot(aes(x = "Aasta", y="ev_suhtarv") + geom_point() + facet_wrap(~Maakond, nrow = 6))
andmestik %>%
select(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
qplot(aes(x = "Aasta", y="ev_suhtarv")) + geom_point() + facet_wrap(~Maakond, nrow = 6)
andmestik %>%
select(Maakond, Aasta, Elanikke, Firmasid)%>%
mutate(ev_suhtarv = Firmasid / 1000)%>%
qplot(aes(x = "Aasta", y="ev_suhtarv")) + geom_point() + facet_wrap(~Maakond, nrow = 6)
